server.port=8082

server.error.include-message=always
spring.config.import=optional:file:.env[.properties]


#datasourse driver
spring.datasource.driver-class-name=${DATABASE_DRIVER}
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

#kafka consumer
spring.kafka.consumer.bootstrap-servers=${KAFKA_SERVER}
spring.kafka.consumer.group-id=ODR
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=orderRequest:com.orders.mintyn_order.entities.order.OrderRequest

spring.kafka.consumer.properties.spring.json.trusted.packages=*



#hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

logging.level.org.springframework.web=DEBUG




